---
- name: Get RDS instance properties
  amazon.aws.rds_instance_info:
    db_instance_identifier: "{{ troubleshoot_rds_connectivity_db_instance_id }}"
  register: troubleshoot_rds_connectivity__rds_info

- name: Assert that DB instance exists
  ansible.builtin.fail:
    msg: No DB instance found with identifier '{{ troubleshoot_rds_connectivity_db_instance_id }}'
  when: troubleshoot_rds_connectivity__rds_info.instances | length == 0

- name: Assert that DB Instance status is 'available'
  ansible.builtin.fail:
    msg: Bad DB instance status, expecting 'available', found '{{ troubleshoot_rds_connectivity__rds_info.instances.0.db_instance_status }}'
  when: troubleshoot_rds_connectivity__rds_info.instances.0.db_instance_status != "available"

- name: >
    Set RDS instance endpoint address, RDS instance endpoint port, and RDS instance subnets 'troubleshoot_rds_connectivity__rds_instance_vpc_id'
    and 'troubleshoot_rds_connectivity__rds_instance_vpc_security_groups' variables
  ansible.builtin.set_fact:
    troubleshoot_rds_connectivity__rds_instance_endpoint_addr: "{{ rds_instance_info.endpoint.address }}"
    troubleshoot_rds_connectivity__rds_instance_endpoint_port: "{{ rds_instance_info.endpoint.port }}"
    # rds_instance_publicly_accessible: "{{ rds_instance_info.publicly_accessible }}"
    troubleshoot_rds_connectivity__rds_instance_subnets: "{{ rds_instance_info.db_subnet_group.subnets | map(attribute='subnet_identifier') | list }}"
    troubleshoot_rds_connectivity__rds_instance_vpc_id: "{{ rds_instance_info.db_subnet_group.vpc_id }}"
    troubleshoot_rds_connectivity__rds_instance_vpc_security_groups: >-
      {{ rds_instance_info.vpc_security_groups | map(attribute='vpc_security_group_id') | list }}
  vars:
    rds_instance_info: "{{ troubleshoot_rds_connectivity__rds_info.instances.0 }}"

- name: Get RDS Network ACL Rules
  amazon.aws.ec2_vpc_nacl_info:
    filters:
      association.subnet-id: "{{ troubleshoot_rds_connectivity__rds_instance_subnets }}"
  register: troubleshoot_rds_connectivity__rds_network_acl

- name: Get RDS Subnet info
  amazon.aws.ec2_vpc_subnet_info:
    subnet_ids: "{{ troubleshoot_rds_connectivity__rds_instance_subnets }}"
  register: troubleshoot_rds_connectivity__rds_subnets_info

- name: Set RDS subnets cidrs
  ansible.builtin.set_fact:
    troubleshoot_rds_connectivity__rds_subnets_cidrs: "{{ troubleshoot_rds_connectivity__rds_subnets_info.subnets | map(attribute='cidr_block') | list }}"

- name: Get RDS Security Groups
  amazon.aws.ec2_security_group_info:
    filters:
      group-id: "{{ troubleshoot_rds_connectivity__rds_instance_vpc_security_groups }}"
  register: troubleshoot_rds_connectivity__rds_security_groups

- name: Get RDS Route Tables
  amazon.aws.ec2_vpc_route_table_info:
    filters:
      association.subnet-id: "{{ troubleshoot_rds_connectivity__rds_instance_subnets }}"
  register: troubleshoot_rds_connectivity__rds_subnet_route_table

- name: Get RDS VPC Route Tables
  amazon.aws.ec2_vpc_route_table_info:
    filters:
      association.main: true
      vpc-id: "{{ troubleshoot_rds_connectivity__rds_instance_vpc_id }}"
  register: troubleshoot_rds_connectivity__rds_vpc_route_table
